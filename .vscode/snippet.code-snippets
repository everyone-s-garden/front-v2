{
  "storybook": {
    "scope": "typescript,typescriptreact",
    "prefix": "!story",
    "body": [
      "import type { Meta, StoryObj } from '@storybook/react';",
      "import ${1:${TM_FILENAME_BASE/\\..*$//}} from './$1';",
      "",
      "const meta = {",
      "  title: '${2:${TM_DIRECTORY/.*\\\\([^\\\\]+)\\\\[^\\\\]+$/$1/}}/$1',",
      "  component: $1,",
      "  tags: ['autodocs'],",
      "  parameters: {",
      "    viewport: {",
      "      defaultViewport: '${3|desktop,tablet,mobile1|}',",
      "    },",
      "  },",
      "  argTypes: {},",
      "} satisfies Meta<typeof $1>;",
      "",
      "export default meta;",
      "type Story = StoryObj<typeof meta>;",
      "",
      "export const ${4:storyName}: Story = {",
      "  args: {$5},",
      "  argTypes: {$6},",
      "};",
      "",
    ],
    "description": "스토리북 v8 템플릿",
  },
  "component": {
    "scope": "typescript,typescriptreact",
    "prefix": "!comp",
    "body": [
      "interface $1Props {}",
      "",
      "const ${1:${TM_FILENAME_BASE}} = ({}: $1Props) => {",
      "  return (",
      "    <>",
      "      $2",
      "    </>",
      "  );",
      "};",
      "",
      "export default $1;",
      "",
    ],
    "description": "기본 컴포넌트 템플릿",
  },
  "component with children": {
    "scope": "typescript,typescriptreact",
    "prefix": "!compwc",
    "body": [
      "import { PropsWithChildren } from 'react';",
      "",
      "interface $1Props {}",
      "",
      "const ${1:${TM_FILENAME_BASE}} = ({}: PropsWithChildren<$1Props>) => {",
      "  return (",
      "    <>",
      "      $2",
      "    </>",
      "  );",
      "};",
      "",
      "export default $1;",
      "",
    ],
    "description": "children이 있는 컴포넌트 템플릿",
  },
  "api service": {
    "scope": "typescript",
    "prefix": "!api",
    "body": [
      "import apiClient from '@/api/apiClient';",
      "",
      "const ${1:${TM_DIRECTORY/.*\\\\([^\\\\]+)$/$1/}}API = {",
      "  get${2:Example}: async () => {",
      "    const response = await apiClient.get(`${3:/example}`);",
      "",
      "    return response.data;",
      "  },",
      "};",
      "",
      "export default $1API;",
      "",
    ],
    "description": "API 서비스 템플릿",
  },
  "query service": {
    "prefix": "!query",
    "body": [
      "import { queryOptions, useQuery } from '@tanstack/react-query';",
      "import ${1:${TM_DIRECTORY/.*\\\\([^\\\\]+)$/$1/}}API from './api';",
      "",
      "export const $1Queries = {",
      "  all: () => ['$1'] as const,",
      "  ${2:detail}s: () => [...$1Queries.all(), '$2'],",
      "  $2: (${3:id}: ${4:number}) =>",
      "    queryOptions({",
      "      queryKey: [...$1Queries.$2s(), $3],",
      "      queryFn: () => $1API.getExampleData($3),",
      "    }),",
      "};",
      "",
      "/** 커스텀 훅 내보내기 */",
      "export const useGetExample = ($3: $4) => {",
      "  return useQuery($1Queries.$2($3));",
      "};",
      "",
    ],
    "description": "쿼리 서비스 템플릿",
  },
}
